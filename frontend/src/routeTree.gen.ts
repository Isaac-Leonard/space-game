/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as PlayIndexImport } from './routes/play/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as PlaySystemImport } from './routes/play/system'
import { Route as PlayRelayImport } from './routes/play/relay'
import { Route as PlayLocalareaImport } from './routes/play/local_area'
import { Route as PlayAccountImport } from './routes/play/account'
import { Route as AdminShipsImport } from './routes/admin/ships'
import { Route as PlayShipsIndexImport } from './routes/play/ships/index'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as PlayShipsShipIdImport } from './routes/play/ships/$shipId'
import { Route as AdminUsersUserIdImport } from './routes/admin/users/$userId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PlayIndexRoute = PlayIndexImport.update({
  id: '/play/',
  path: '/play/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const PlaySystemRoute = PlaySystemImport.update({
  id: '/play/system',
  path: '/play/system',
  getParentRoute: () => rootRoute,
} as any)

const PlayRelayRoute = PlayRelayImport.update({
  id: '/play/relay',
  path: '/play/relay',
  getParentRoute: () => rootRoute,
} as any)

const PlayLocalareaRoute = PlayLocalareaImport.update({
  id: '/play/local_area',
  path: '/play/local_area',
  getParentRoute: () => rootRoute,
} as any)

const PlayAccountRoute = PlayAccountImport.update({
  id: '/play/account',
  path: '/play/account',
  getParentRoute: () => rootRoute,
} as any)

const AdminShipsRoute = AdminShipsImport.update({
  id: '/admin/ships',
  path: '/admin/ships',
  getParentRoute: () => rootRoute,
} as any)

const PlayShipsIndexRoute = PlayShipsIndexImport.update({
  id: '/play/ships/',
  path: '/play/ships/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

const PlayShipsShipIdRoute = PlayShipsShipIdImport.update({
  id: '/play/ships/$shipId',
  path: '/play/ships/$shipId',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersUserIdRoute = AdminUsersUserIdImport.update({
  id: '/admin/users/$userId',
  path: '/admin/users/$userId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/ships': {
      id: '/admin/ships'
      path: '/admin/ships'
      fullPath: '/admin/ships'
      preLoaderRoute: typeof AdminShipsImport
      parentRoute: typeof rootRoute
    }
    '/play/account': {
      id: '/play/account'
      path: '/play/account'
      fullPath: '/play/account'
      preLoaderRoute: typeof PlayAccountImport
      parentRoute: typeof rootRoute
    }
    '/play/local_area': {
      id: '/play/local_area'
      path: '/play/local_area'
      fullPath: '/play/local_area'
      preLoaderRoute: typeof PlayLocalareaImport
      parentRoute: typeof rootRoute
    }
    '/play/relay': {
      id: '/play/relay'
      path: '/play/relay'
      fullPath: '/play/relay'
      preLoaderRoute: typeof PlayRelayImport
      parentRoute: typeof rootRoute
    }
    '/play/system': {
      id: '/play/system'
      path: '/play/system'
      fullPath: '/play/system'
      preLoaderRoute: typeof PlaySystemImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/play/': {
      id: '/play/'
      path: '/play'
      fullPath: '/play'
      preLoaderRoute: typeof PlayIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/$userId': {
      id: '/admin/users/$userId'
      path: '/admin/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AdminUsersUserIdImport
      parentRoute: typeof rootRoute
    }
    '/play/ships/$shipId': {
      id: '/play/ships/$shipId'
      path: '/play/ships/$shipId'
      fullPath: '/play/ships/$shipId'
      preLoaderRoute: typeof PlayShipsShipIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/play/ships/': {
      id: '/play/ships/'
      path: '/play/ships'
      fullPath: '/play/ships'
      preLoaderRoute: typeof PlayShipsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AboutLazyRoute
  '/admin/ships': typeof AdminShipsRoute
  '/play/account': typeof PlayAccountRoute
  '/play/local_area': typeof PlayLocalareaRoute
  '/play/relay': typeof PlayRelayRoute
  '/play/system': typeof PlaySystemRoute
  '/admin': typeof AdminIndexRoute
  '/play': typeof PlayIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/play/ships/$shipId': typeof PlayShipsShipIdRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/play/ships': typeof PlayShipsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AboutLazyRoute
  '/admin/ships': typeof AdminShipsRoute
  '/play/account': typeof PlayAccountRoute
  '/play/local_area': typeof PlayLocalareaRoute
  '/play/relay': typeof PlayRelayRoute
  '/play/system': typeof PlaySystemRoute
  '/admin': typeof AdminIndexRoute
  '/play': typeof PlayIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/play/ships/$shipId': typeof PlayShipsShipIdRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/play/ships': typeof PlayShipsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AboutLazyRoute
  '/admin/ships': typeof AdminShipsRoute
  '/play/account': typeof PlayAccountRoute
  '/play/local_area': typeof PlayLocalareaRoute
  '/play/relay': typeof PlayRelayRoute
  '/play/system': typeof PlaySystemRoute
  '/admin/': typeof AdminIndexRoute
  '/play/': typeof PlayIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/play/ships/$shipId': typeof PlayShipsShipIdRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/play/ships/': typeof PlayShipsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/about'
    | '/admin/ships'
    | '/play/account'
    | '/play/local_area'
    | '/play/relay'
    | '/play/system'
    | '/admin'
    | '/play'
    | '/admin/users/$userId'
    | '/play/ships/$shipId'
    | '/admin/users'
    | '/play/ships'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/about'
    | '/admin/ships'
    | '/play/account'
    | '/play/local_area'
    | '/play/relay'
    | '/play/system'
    | '/admin'
    | '/play'
    | '/admin/users/$userId'
    | '/play/ships/$shipId'
    | '/admin/users'
    | '/play/ships'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/register'
    | '/about'
    | '/admin/ships'
    | '/play/account'
    | '/play/local_area'
    | '/play/relay'
    | '/play/system'
    | '/admin/'
    | '/play/'
    | '/admin/users/$userId'
    | '/play/ships/$shipId'
    | '/admin/users/'
    | '/play/ships/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AdminShipsRoute: typeof AdminShipsRoute
  PlayAccountRoute: typeof PlayAccountRoute
  PlayLocalareaRoute: typeof PlayLocalareaRoute
  PlayRelayRoute: typeof PlayRelayRoute
  PlaySystemRoute: typeof PlaySystemRoute
  AdminIndexRoute: typeof AdminIndexRoute
  PlayIndexRoute: typeof PlayIndexRoute
  AdminUsersUserIdRoute: typeof AdminUsersUserIdRoute
  PlayShipsShipIdRoute: typeof PlayShipsShipIdRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  PlayShipsIndexRoute: typeof PlayShipsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  AboutLazyRoute: AboutLazyRoute,
  AdminShipsRoute: AdminShipsRoute,
  PlayAccountRoute: PlayAccountRoute,
  PlayLocalareaRoute: PlayLocalareaRoute,
  PlayRelayRoute: PlayRelayRoute,
  PlaySystemRoute: PlaySystemRoute,
  AdminIndexRoute: AdminIndexRoute,
  PlayIndexRoute: PlayIndexRoute,
  AdminUsersUserIdRoute: AdminUsersUserIdRoute,
  PlayShipsShipIdRoute: PlayShipsShipIdRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  PlayShipsIndexRoute: PlayShipsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/register",
        "/about",
        "/admin/ships",
        "/play/account",
        "/play/local_area",
        "/play/relay",
        "/play/system",
        "/admin/",
        "/play/",
        "/admin/users/$userId",
        "/play/ships/$shipId",
        "/admin/users/",
        "/play/ships/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/admin/ships": {
      "filePath": "admin/ships.tsx"
    },
    "/play/account": {
      "filePath": "play/account.tsx"
    },
    "/play/local_area": {
      "filePath": "play/local_area.tsx"
    },
    "/play/relay": {
      "filePath": "play/relay.tsx"
    },
    "/play/system": {
      "filePath": "play/system.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/play/": {
      "filePath": "play/index.tsx"
    },
    "/admin/users/$userId": {
      "filePath": "admin/users/$userId.tsx"
    },
    "/play/ships/$shipId": {
      "filePath": "play/ships/$shipId.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx"
    },
    "/play/ships/": {
      "filePath": "play/ships/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
